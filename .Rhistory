observed[i,], finalTrtEffect )
}
finalTrtEffect <- ifelse( is.na(finalTrtEffect), observed[4,], finalTrtEffect )
H1.less <- density(finalTrtEffect)
#### CONFIDENCE INTERVALS: FIXED SIZE SEQDESIGN TEST RUN ####
OBF.FIXED <- seqDesign(
prob.model= "proportions", #distribution
arms= 2, #2 trt arms
ratio= c(1,1),
sample.size = 1700,
null.hypothesis= 0.3, #no differences in trt
alt.hypothesis= 0.23,
variance="alternative",
test.type= "two.sided",
size= 0.05, #alpha
power="calculate"
)
OBF.FIXED.lower <- seqBoundary(OBF.FIXED)[,1]
OBF.FIXED.upper <- seqBoundary(OBF.FIXED)[,4]
OBF.FIXED
?density
?qnorm
?quantiles
?quantile
mean.est <- mean(finalTrtEffect)
mean.est
OBF.FIXED <- seqDesign(
prob.model= "proportions", #distribution
arms= 2, #2 trt arms
ratio= c(1,1),
sample.size = 1700,
null.hypothesis= 0.3, #no differences in trt
alt.hypothesis= 0.23,
variance="alternative",
test.type= "two.sided",
size= 0.05, #alpha
power="calculate"
)
OBF.FIXED.lower <- seqBoundary(OBF.FIXED)[,1]
OBF.FIXED.upper <- seqBoundary(OBF.FIXED)[,4]
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.1 and 0.1 on either side
H1.lowerBound <- c(0.23, 0.13, by= -0.02)
H1.upperBound <- c(0.23, 0.33, by= 0.02)
nsims <- 100000
observed.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
observed.upperBound <- rep(list=rep( NA, nsims ), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list=rep( NA, nsims ), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]][i] < H1.lowerBound | observed.lowerBound[[j]][i] > H1.upperBound),
observed.lowerBound[[j]][i], finalTrtEffect.lowerBound[[j]] )
H1.lowerDensity <- density(finalTrtEffect[[j]])
if( mean.est >= (quantile(.975, H1.lowerDensity) + 0.05) & mean.est <= (uantile(.975, H1.lowerDensity) - 0.05)){
CI.lower <- mean(finalTrtEffect[[j]])
break
}
}
observed.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
obserevd.lowerBound[[1]]
observed.lowerBound[[1]]
length(H1.lowerBound)
#true H1 is 0.23, so want -0.1 and 0.1 on either side
H1.lowerBound <- c(0.23, 0.13, by= -0.02)
H1.lowerBound
#true H1 is 0.23, so want -0.1 and 0.1 on either side
H1.lowerBound <- seq(0.23, 0.13, by= -0.02)
H1.upperBound <- seq(0.23, 0.33, by= 0.02)
nsims <- 100000
observed.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
observed.upperBound <- rep(list=rep( NA, nsims ), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list=rep( NA, nsims ), length(H1.upperBound))
observed.lowerBound[[1]]
H1.lowerBound
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
observed.upperBound <- rep(list=rep( NA, nsims ), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list=rep( NA, nsims ), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list=rep( NA, nsims ), length(H1.upperBound))
rep(1, 3)
observed.lowerBound[[1]]
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
observed.lowerBound
observed.lowerBound[[1]]
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]][i] < H1.lowerBound | observed.lowerBound[[j]][i] > H1.upperBound),
observed.lowerBound[[j]][i], finalTrtEffect.lowerBound[[j]] )
H1.lowerDensity <- density(finalTrtEffect[[j]])
if( mean.est >= (quantile(.975, H1.lowerDensity) + 0.05) & mean.est <= (uantile(.975, H1.lowerDensity) - 0.05)){
CI.lower <- mean(finalTrtEffect[[j]])
break
}
}
finalTrtEffect.lowerBound[[1]]
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < H1.lowerBound | observed.lowerBound[[j]] > H1.upperBound),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est >= (quantile(.975, H1.lowerDensity) + 0.05) & mean.est <= (quantile(.975, H1.lowerDensity) - 0.05)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]])
break
}
}
H1.lowerDensity
quantile(0.975, H1.lowerDensity)
quantile(0.975, H1.lowerDensity[[1]])
x <- rnorm(200, 0, 1)
density(x)
quantile(0.975, density(x))
quantile(x)
quantile(0.975, x)
?quantile
quantile(density(x), 0.975)
quantile(x, 0.975)
OBF.FIXED <- seqDesign(
prob.model= "proportions", #distribution
arms= 2, #2 trt arms
ratio= c(1,1),
sample.size = 1700,
null.hypothesis= 0.3, #no differences in trt
alt.hypothesis= 0.23,
variance="alternative",
test.type= "two.sided",
size= 0.05, #alpha
power="calculate"
)
OBF.FIXED.lower <- seqBoundary(OBF.FIXED)[,1]
OBF.FIXED.upper <- seqBoundary(OBF.FIXED)[,4]
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < H1.lowerBound | observed.lowerBound[[j]] > H1.upperBound),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
#H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.lowerBound[[j]], 0.975) + 0.05) & mean.est <= (quantile(finalTrtEffect.lowerBound[[j]], 0.975) - 0.05)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]])
break
}
}
CI.lower
warnings()
H1.lowerBound
OBF.FIXED <- seqDesign(
prob.model= "proportions", #distribution
arms= 2, #2 trt arms
ratio= c(1,1),
sample.size = 1700,
null.hypothesis= 0.3, #no differences in trt
alt.hypothesis= 0.23,
variance="alternative",
test.type= "two.sided",
size= 0.05, #alpha
power="calculate"
)
OBF.FIXED.lower <- seqBoundary(OBF.FIXED)[,1]
OBF.FIXED.upper <- seqBoundary(OBF.FIXED)[,4]
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < OBF.FIXED.lower | observed.lowerBound[[j]] > OBF.FIXED.upper),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
#H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.lowerBound[[j]], 0.975) + 0.05) & mean.est <= (quantile(finalTrtEffect.lowerBound[[j]], 0.975) - 0.05)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]])
break
}
}
OBF.FIXED <- seqDesign(
prob.model= "proportions", #distribution
arms= 2, #2 trt arms
ratio= c(1,1),
sample.size = 1700,
null.hypothesis= 0.3, #no differences in trt
alt.hypothesis= 0.23,
variance="alternative",
test.type= "two.sided",
size= 0.05, #alpha
power="calculate"
)
OBF.FIXED.lower <- seqBoundary(OBF.FIXED)[,1]
OBF.FIXED.upper <- seqBoundary(OBF.FIXED)[,4]
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < OBF.FIXED.lower | observed.lowerBound[[j]] > OBF.FIXED.upper),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
#H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) + 0.05) & mean.est <= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) - 0.05)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]], na.rm=T)
break
}
}
CI.lower
finalTrtEffect.lowerBound[[1]]
quantile(finalTrtEffect.lowerBound[[1]], 0.975)
quantile(finalTrtEffect.lowerBound[[1]], 0.975, na.rm=T)
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < OBF.FIXED.lower | observed.lowerBound[[j]] > OBF.FIXED.upper),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
#H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) + 0.0005) & mean.est <= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) - 0.0005)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]], na.rm=T)
break
}
}
CI.lower
finalTrtEffect.lowerBound[[length(H1.lowerBound)]]
mean(finalTrtEffect.lowerBound[[length(H1.lowerBound)]])
quantile(finalTrtEffect.lowerBound[[length(H1.lowerBound)]], 0.975)
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < OBF.FIXED.lower | observed.lowerBound[[j]] > OBF.FIXED.upper),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
#H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) + 0.005) & mean.est <= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) - 0.005)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]], na.rm=T)
break
}
}
CI.lower
mean.true <- 0
H1.CI.normLower <- seq(0, -5, by=-0.05)
H1.CI.normUpper <- seq(0, 5, by=0.05)
for( i in seq( length(H1.CI.normLower) ) ){
upper <- qnorm(.975, H1.CI.normLower[i], 1)
if(mean.true <= (upper + 0.05) & mean.true >= (upper - 0.05) ){
CI.lower <- H1.CI.normLower[i]
break
}
}
for( i in seq( length(H1.CI.normUpper) ) ){
lower <- qnorm(.025, H1.CI.normUpper[i], 1)
if(mean.true >= (lower - 0.05) & mean.true <= (lower + 0.05) ){
CI.Upper <- H1.CI.normUpper[i]
break
}
}
CI.lower
CI.Upper
mean.est
mean(observed.lowerBound[[1]])
mean(finalTrtEffect.lowerBound[[1]])
mean(finalTrtEffect.lowerBound[[1]], na.rm=T)
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.lowerBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.lowerBound <- rbinom(Ni, 1, 0.3)
trt.lowerBound <- rbinom(Ni, 1, H1.lowerBound[j])
observed.lowerBound[[j]][i] <- ( mean(trt.lowerBound) - mean(control.lowerBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.lowerBound[[j]] <- ifelse( is.na(finalTrtEffect.lowerBound[[j]]) & (observed.lowerBound[[j]] < OBF.FIXED.lower | observed.lowerBound[[j]] > OBF.FIXED.upper),
observed.lowerBound[[j]], finalTrtEffect.lowerBound[[j]] )
#H1.lowerDensity <- density(finalTrtEffect.lowerBound[[j]])
if( mean.est <= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) + 0.005) & mean.est >= (quantile(finalTrtEffect.lowerBound[[j]], 0.975, na.rm=T) - 0.005)){
CI.lower <- mean(finalTrtEffect.lowerBound[[j]], na.rm=T)
break
}
}
CI.loewr
CI.lowerr
CI.lower
for( j in seq( length(H1.upperBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.upperBound <- rbinom(Ni, 1, 0.3)
trt.upperBound <- rbinom(Ni, 1, H1.upperBound[j])
observed.upperBound[[j]][i] <- ( mean(trt.upperBound) - mean(control.upperBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.upperBound[[j]] <- ifelse( is.na(finalTrtEffect.upperBound[[j]]) & (observed.upperBound[[j]] < OBF.FIXED.upper | observed.upperBound[[j]] > OBF.FIXED.upper),
observed.upperBound[[j]], finalTrtEffect.upperBound[[j]] )
#H1.upperDensity <- density(finalTrtEffect.upperBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) + 0.005) & mean.est <= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) - 0.005)){
CI.upper <- mean(finalTrtEffect.upperBound[[j]], na.rm=T)
break
}
}
CI.Upper
CI.upper
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.upperBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.upperBound <- rbinom(Ni, 1, 0.3)
trt.upperBound <- rbinom(Ni, 1, H1.upperBound[j])
observed.upperBound[[j]][i] <- ( mean(trt.upperBound) - mean(control.upperBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.upperBound[[j]] <- ifelse( is.na(finalTrtEffect.upperBound[[j]]) & (observed.upperBound[[j]] < OBF.FIXED.upper | observed.upperBound[[j]] > OBF.FIXED.upper),
observed.upperBound[[j]], finalTrtEffect.upperBound[[j]] )
#H1.upperDensity <- density(finalTrtEffect.upperBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) + 0.005) & mean.est <= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) - 0.005)){
CI.upper <- mean(finalTrtEffect.upperBound[[j]], na.rm=T)
break
}
}
Ni <- 850
N <- 1700
H0 <- 0.3
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
observed.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(rep( NA, nsims )), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(rep( NA, nsims )), length(H1.upperBound))
for( j in seq( length(H1.upperBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.upperBound <- rbinom(Ni, 1, 0.3)
trt.upperBound <- rbinom(Ni, 1, H1.upperBound[j])
observed.upperBound[[j]][i] <- ( mean(trt.upperBound) - mean(control.upperBound) )
}
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.upperBound[[j]] <- ifelse( is.na(finalTrtEffect.upperBound[[j]]) & (observed.upperBound[[j]] < OBF.FIXED.upper | observed.upperBound[[j]] > OBF.FIXED.upper),
observed.upperBound[[j]], finalTrtEffect.upperBound[[j]] )
#H1.upperDensity <- density(finalTrtEffect.upperBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) - 0.005) & mean.est <= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) + 0.005)){
CI.upper <- mean(finalTrtEffect.upperBound[[j]], na.rm=T)
break
}
}
CI.upper
CI.lower
J <- c(425*1:4)
J
#### CONFIEDENCE INTERVALS: FOR REAL THIS TIME ####
stop.eff.H1.2 <- OBF.j4.H1.2$boundary[,1]
stop.fut.H1.2 <- OBF.j4.H1.2$boundary[,4]
stop.eff.H1.2
stop.fut.H1.2
stop.eff.H1.2 <- OBF.j4.H1.2$boundary[,1]
stop.fut.H1.2 <- OBF.j4.H1.2$boundary[,4]
Ni <- 850
N <- 1700
H0 <- 0.3
J <- c(425*1:4)
#true H1 is 0.23, so want -0.2 and 0.2 on either side
H1.lowerBound <- seq(0.23, 0.03, by= -0.01)
H1.upperBound <- seq(0.23, 0.53, by= 0.01)
nsims <- 100000
observed.lowerBound <- rep(list(matrix(rep( NA, nsims )), ncol=nsims, nrow=length(J)), length(H1.lowerBound))
observed.upperBound <- rep(list(matrix(rep( NA, nsims )), ncol=nsims, nrow=length(J)), length(H1.upperBound))
finalTrtEffect.lowerBound <- rep(list(matrix(rep( NA, nsims )), ncol=nsims, nrow=length(J)), length(H1.lowerBound))
finalTrtEffect.upperBound <- rep(list(matrix(rep( NA, nsims )), ncol=nsims, nrow=length(J)), length(H1.upperBound))
## UPPER BOUND ##
for( j in seq( length(H1.upperBound) ) ){
for(i in 1:nsims){
## SIMULATE DATA ##
control.upperBound <- rbinom(Ni, 1, 0.3)
trt.upperBound <- rbinom(Ni, 1, H1.upperBound[j])
for( k in seq( length(J)-1 ) ){
observed.upperBound[[j]][k,i] <- ( mean(trt.upperBound[seq(J[k]/2)]) - mean(control.upperBound[seq(J[k]/2)]) )
}#k for end
observed.upperBound[[j]][4,i] <- ( mean(trt.upperBound) - mean(control.upperBound) )
}#i for end
for( k in seq( length(J) ) ){
## WHEN DO WE CROSS THE BOUNDARIES? ##
finalTrtEffect.upperBound[[j]] <- ifelse( is.na(finalTrtEffect.upperBound[[j]]) & (observed.upperBound[[j]][k,] < stop.eff.H1.2[k] | observed.upperBound[[j]][k,] > stop.fut.H1.2[k]),
observed.upperBound[[j]][k,], finalTrtEffect.upperBound[[j]] )
}# k for end
finalTrtEffect.upperBound[[j]] <- ifelse( is.na(finalTrtEffect[[j]]), observed.upperBound[[j]][4,], finalTrtEffect[[j]] )
#H1.upperDensity <- density(finalTrtEffect.upperBound[[j]])
if( mean.est >= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) - 0.005) & mean.est <= (quantile(finalTrtEffect.upperBound[[j]], 0.025, na.rm=T) + 0.005)){
CI.upper <- mean(finalTrtEffect.upperBound[[j]], na.rm=T)
break
}#if end
}#j for end
seq(J[k]/2)
